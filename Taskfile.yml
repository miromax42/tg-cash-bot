version: '3'

includes:
  ci: ./.gitlab-ci/Taskfile.yml

env:
  ENV: test


dotenv: ['.env', '{{.ENV}}.env']


vars:
  MIGRATE_DIR: file://ent/migrate/migrations
  BINDIR: ${PWD}/bin


tasks:
  gen: go generate ./...
  test:
    cmds:
      - go test --coverprofile=coverage.out ./... -short
      - go tool cover -func=coverage.out | grep 'total:' | tr -d '[:blank:]\(\)'


  run: go run ./...

  lint: golangci-lint run ./...

  migration-verify: >
    go run -mod=mod ariga.io/atlas/cmd/atlas migrate lint
    --dev-url={{.DB_URL}}
    --dir={{.MIGRATE_DIR}}
    --latest=1
  migration-gen: go run -mod=mod ent/migrate/main.go
  migration-new: go run -mod=mod ent/migrate/main.go {{.CLI_ARGS}}
  migration-force: go run -mod=mod ariga.io/atlas/cmd/atlas migrate hash --dir {{.MIGRATE_DIR}}
  migration-apply: >
    go run -mod=mod ariga.io/atlas/cmd/atlas migrate apply
    --dir {{.MIGRATE_DIR}}
    --url {{.DB_URL}}

  mock:
    cmds:
      - mockery --all --keeptree --dir ./repo
      - mockery --all --keeptree --dir ./currency
      - mockery --all --keeptree --dir ./currency
      - mockery --all --keeptree --dir ./telegram/tools
      - mockery --all --keeptree --dir ./util
